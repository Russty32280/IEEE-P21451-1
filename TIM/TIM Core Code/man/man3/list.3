.TH "list" 3 "Tue Jan 26 2016" "Version 0.1" "P21451_TIM" \" -*- nroff -*-
.ad l
.nh
.SH NAME
list \- List Module
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBlist_link_t\fP"
.br
.ti -1c
.RI "struct \fBlist_t\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t(* \fBsort_fn_t\fP) (void *, void *)"
.br
.ti -1c
.RI "typedef uint8_t(* \fBidentify_fn_t\fP) (void *, void *)"
.br
.ti -1c
.RI "typedef struct \fBlist_link_t\fP \fBlist_link_t\fP"
.br
.ti -1c
.RI "typedef struct \fBlist_t\fP \fBlist_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBList_Init\fP (\fBlist_t\fP *list, uint16_t item_size, void *item_array, uint16_t item_array_length, \fBlist_link_t\fP *link_array)"
.br
.ti -1c
.RI "void \fBList_SetSortFunction\fP (\fBlist_t\fP *list, uint8_t(*sort_fn)(void *a, void *b))"
.br
.ti -1c
.RI "void \fBList_SetIdentifyFunction\fP (\fBlist_t\fP *list, uint8_t(*identify_fn)(void *identifier, void *item))"
.br
.ti -1c
.RI "void * \fBList_AddAndLink\fP (\fBlist_t\fP *list, void *item)"
.br
.ti -1c
.RI "void * \fBList_Add\fP (\fBlist_t\fP *list, void *item)"
.br
.ti -1c
.RI "void * \fBList_AddIndirect\fP (\fBlist_t\fP *list)"
.br
.RI "\fIList_AddIndirect is used to obtain a valid position for which an item can be saved to\&. \fP"
.ti -1c
.RI "void \fBList_Link\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_ResortFirst\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_ResortLast\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_LinkItem\fP (\fBlist_t\fP *list, void *item)"
.br
.ti -1c
.RI "void * \fBList_GetFirst\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void * \fBList_GetLast\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void * \fBList_GetNext\fP (\fBlist_t\fP *list, void *item)"
.br
.ti -1c
.RI "void * \fBList_GetItem\fP (\fBlist_t\fP *list, void *identifier)"
.br
.ti -1c
.RI "void \fBList_RemoveFirst\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_RemoveLast\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_Remove\fP (\fBlist_t\fP *list, void *item)"
.br
.ti -1c
.RI "void \fBList_RemoveAll\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_UnlinkItem\fP (\fBlist_t\fP *list, void *item)"
.br
.ti -1c
.RI "void \fBList_UnlinkFirst\fP (\fBlist_t\fP *list)"
.br
.ti -1c
.RI "void \fBList_UnlinkLast\fP (\fBlist_t\fP *list)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBTodo\fP
.RS 4
fill in the main comment block
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "typedef uint8_t(* identify_fn_t) (void *, void *)"

.PP
\fBTodo\fP
.RS 4
Josh Hass Document this typedef (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 22 of file list\&.h\&.
.SS "typedef struct \fBlist_link_t\fP  \fBlist_link_t\fP"

.PP
\fBTodo\fP
.RS 4
Matthew D\&. Document this struct (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.SS "typedef struct \fBlist_t\fP  \fBlist_t\fP"

.PP
\fBTodo\fP
.RS 4
Jacob H\&. Document this struct (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.SS "typedef uint8_t(* sort_fn_t) (void *, void *)"

.PP
\fBTodo\fP
.RS 4
Victor C\&. Document this typedef (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 17 of file list\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void* List_Add (\fBlist_t\fP * list, void * item)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBTodo\fP
.RS 4
Joseph L\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 81 of file list\&.c\&.
.SS "void* List_AddAndLink (\fBlist_t\fP * list, void * item)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBTodo\fP
.RS 4
Josh K\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 65 of file list\&.c\&.
.SS "void* List_AddIndirect (\fBlist_t\fP * list)"

.PP
List_AddIndirect is used to obtain a valid position for which an item can be saved to\&. List_AddIndirect gets an unused link using GetUnusedLink\&. If unused link is available, function will update pointers to unlinked items and update working links\&. If no unused links are available, return a null pointer
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP - Pointer to list that an item needs to be added to 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns a null pointer if there is no room in list\&. Otherwise returns item_ptr in the first unused link 
.RE
.PP

.PP
Definition at line 94 of file list\&.c\&.
.SS "void* List_GetFirst (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBTodo\fP
.RS 4
Josh W\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 192 of file list\&.c\&.
.SS "void* List_GetItem (\fBlist_t\fP * list, void * identifier)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIidentifier\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBTodo\fP
.RS 4
George L\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 210 of file list\&.c\&.
.SS "void* List_GetLast (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBTodo\fP
.RS 4
TJ G\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 196 of file list\&.c\&.
.SS "void* List_GetNext (\fBlist_t\fP * list, void * item)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP
\fBTodo\fP
.RS 4
TJ G\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 200 of file list\&.c\&.
.SS "void List_Init (\fBlist_t\fP * list, uint16_t item_size, void * item_array, uint16_t item_array_length, \fBlist_link_t\fP * link_array)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem_size\fP 
.br
\fIitem_array\fP 
.br
\fIitem_array_length\fP 
.br
\fIlink_array\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Austin H\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 27 of file list\&.c\&.
.SS "void List_Link (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
James R\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 115 of file list\&.c\&.
.SS "void List_LinkItem (\fBlist_t\fP * list, void * item)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Jon W\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 157 of file list\&.c\&.
.SS "void List_Remove (\fBlist_t\fP * list, void * item)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Matthew M\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 252 of file list\&.c\&.
.SS "void List_RemoveAll (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Anthony M\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 261 of file list\&.c\&.
.SS "void List_RemoveFirst (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
George L\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 238 of file list\&.c\&.
.SS "void List_RemoveLast (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Matthew M\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 245 of file list\&.c\&.
.SS "void List_ResortFirst (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Andrew R\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 133 of file list\&.c\&.
.SS "void List_ResortLast (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Chris R\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 145 of file list\&.c\&.
.SS "void List_SetIdentifyFunction (\fBlist_t\fP * list, uint8_t(*)(void *identifier, void *item) identify_fn)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIidentify_fn\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Eric J\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 60 of file list\&.c\&.
.SS "void List_SetSortFunction (\fBlist_t\fP * list, uint8_t(*)(void *a, void *b) sort_fn)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIsort_fn\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Lee H\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 56 of file list\&.c\&.
.SS "void List_UnlinkFirst (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Tom M\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 287 of file list\&.c\&.
.SS "void List_UnlinkItem (\fBlist_t\fP * list, void * item)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.br
\fIitem\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Anthony M\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 279 of file list\&.c\&.
.SS "void List_UnlinkLast (\fBlist_t\fP * list)"

.PP
\fBParameters:\fP
.RS 4
\fIlist\fP 
.RE
.PP
\fBTodo\fP
.RS 4
Tom M\&. Document this function (when done change this line to '@todo MM check <your names> documentation' 
.RE
.PP

.PP
Definition at line 295 of file list\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for P21451_TIM from the source code\&.
